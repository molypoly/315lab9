Nonpreemptive Shortest Job First:

P  0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26
   ---------------------------------------------------------------------------------------------------------
0  | X | X | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
1  |   |   | W | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
2  |   |   |   |   | X | X | X | X | X | X | X | X | X | X | X | X | X |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
3  |   |   |   |   |   |   |   |   | W | W | W | W | W | W | W | W | W | X | X |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
4  |   |   |   |   |   |   |   |   |   | W | W | W | W | W | W | W | W | W | W | W | W | W | X | X | X | X |
   ---------------------------------------------------------------------------------------------------------
5  |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | W | W | W | X | X | X |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------


Shortest Job First (Preemptive):

P  0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26
   ---------------------------------------------------------------------------------------------------------
0  | X | X | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
1  |   |   | W | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
2  |   |   |   |   |   | X | X | X | W | W | W | W | W | W | X | X | W | W | W | X | X | X | X | X | X | X |
   ---------------------------------------------------------------------------------------------------------
3  |   |   |   |   |   |   |   |   | X | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
4  |   |   |   |   |   |   |   |   |   | W | X | X | X | X |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
5  |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | X | X | X |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------


Priority Algorithm (Preemptive):

P  0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26
   ---------------------------------------------------------------------------------------------------------
0  | X | X | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
1  |   |   | W | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
2  |   |   |   |   |   | X | X | X | W | W | X | X | X | X | X | X | X | X | X |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
3  |   |   |   |   |   |   |   |   | X | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
   ---------------------------------------------------------------------------------------------------------
4  |   |   |   |   |   |   |   |   |   | W | W | W | W | W | W | W | W | W | W | X | X | X | X | X |   |   |
   ---------------------------------------------------------------------------------------------------------
5  |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   | W | W | W | W | W | W | W | W | X | X |
   ---------------------------------------------------------------------------------------------------------

Exercise B
void prio(Process *p) {    // Preemptive (by definition)
  int i;
  int maxPid = NONE;       // pid of current highest priority process
  int max    = NONE;       // Priority of current highest prioriity process


  /******** Start of Your Code **********/

    // Find the process with the highest priority
  for(i=0; i<N; i++) {
    if(p[i].arrived && p[i].status != DONE) {
      if(max == NONE) { maxPid = i; max = p[i].priority; }
      else if(p[i].priority < max) {
        maxPid = i;
        max = p[i].priority;  
      }
    }
  }


  // Update the affected processes statuses (and start if needed) as well as current_pid
  if(maxPid != NONE) {
    if(current_pid != NONE) {
      p[current_pid].status = WAITING;
    }
    p[maxPid].status = ONCPU;
    current_pid      = maxPid;
    if(p[maxPid].start == NONE) p[maxPid].start = current_time;
  }

  /********* End of Your Code ***********/

}